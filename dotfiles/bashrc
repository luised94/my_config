# ~/.bashrc: executed by bash(1) for non-login shells.

# If not running interactively, don't do anything
case $- in
  *i*) ;;
    *) return;;
esac

# Initialize bash utilities
export BASH_UTILS_PATH="$HOME/my_config/bash"
[[ -z "$_BASH_UTILS_INITIALIZED" ]] && source "$BASH_UTILS_PATH/init.sh"

# Apply shell options from configuration
for opt in "${SHELL_OPTIONS[@]}"; do
  shopt -s "$opt"
done

# Set up prompt
log_info "Configuring shell prompt..."

# Check for color support
color_prompt=
case "$TERM" in
  xterm-color|*-256color) color_prompt=yes;;
esac

# Set up debian chroot prefix
debian_chroot=
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
  debian_chroot=$(cat /etc/debian_chroot)
fi

# Configure prompt based on color support
if [ "$color_prompt" = yes ]; then
  PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
  PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi

# Special handling for xterm
case "$TERM" in
  xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
  *)
    ;;
esac

log_info "Prompt configuration complete"

# Set up aliases
# Defined in aliases_config and source in init.sh
log_info "Setting up aliases..."

MY_SHELL_ALIASES=(
  # --- Basic aliases ---
  "ll=ls -alF"
  "la=ls -A"
  "l=ls -CF"
  # --- Programming language aliases ---
  "R=R --no-save"

  # --- WSL/WINDOWS related ---
  "cdwin=cd \"\$DROPBOX_PATH\"" # Escape the quotes and the $ to prevent expansion and quote when evaluated
  "explorer=explorer.exe ."

  # --- Git aliases ---
  "ga=git add"
  "gb=git branch"
  "gc=git commit"
  "gcb=git checkout -b"
  "gco=git checkout"
  "gd=git diff"
  "gfap=git fetch --all --prune"
  "gl=git log --oneline --graph --decorate"
  "gm=git merge"
  "gmnff=git merge --no-ff"
  "gpl=git pull"
  "gps=git push"
  "grm=git rebase main"
  "gs=git status"
  "ngd=nvim < <(git diff)"
  "ngda=nvim < <(git diff HEAD)"
  "ngdc=nvim < <(git diff --cached)"
  #"gitstart=git fetch --all --prune && git status && git pull && git rebase main && echo [X] Git workspace ready for coding!'"
  #"syncall=sync_all_branches"

  # --- Lab utils aliases ---
  "edit_bmc_configs=nvim ~/data/*Bel/documentation/*_bmc_config.R ~/lab_utils/core_scripts/template_configuration_experiment_bmc.R ~/lab_utils/core_scripts/configuration_experiment_bmc.R"
)

for alias_def in "${MY_SHELL_ALIASES[@]}"; do
  #echo "${alias_def}"
  alias "${alias_def}"
done

log_info "Aliases configured successfully"

# Set up environment variables and paths
log_info "Setting up environment..."
# Path configurations
#ADDITIONAL_PATHS=(
#    "~/node-v22.5.1-linux-x64/bin"
#)
# Add additional paths
#for path in "${ADDITIONAL_PATHS[@]}"; do
#    eval "path_expanded=$path"
#    [[ -d "$path_expanded" ]] && PATH="$PATH:$path_expanded"
#done

# Environment variables
ENV_VARS=(
   "BROWSER=/mnt/c/Program Files (x86)/BraveSoftware/Brave-Browser/Application/brave.exe"
   "GIT_EDITOR=nvim"
   "R_HOME=/usr/local/bin/R"
   "R_LIBS_USER=/opt/R/library/"
)

# Set environment variables
for var in "${ENV_VARS[@]}"; do
  export "$var"
done

log_info "Environment variables configured..."

# Set vi mode
set -o vi

# Set up Windows environment if in WSL
if [[ -n "$WSL_DISTRO_NAME" ]]; then
  #setup_windows_environment
    windows_user=$(cmd.exe /C "echo %USERNAME%" 2>/dev/null | tr -d '\r\n')
    if [[ -z "$windows_user" ]]; then
      log_error "Error: Unable to retrieve Windows username." >&2
      return 1
    fi
    log_info "Windows User: $windows_user"
    # Set up Dropbox path
    #dropbox_path="/mnt/c/Users/${windows_user}/Dropbox (MIT)/"
    dropbox_path="/mnt/c/Users/${windows_user}/MIT Dropbox/Luis Martinez"
    if [[ ! -d "$dropbox_path" ]]; then

        log_warning "Warning: Dropbox directory not found at $dropbox_path" >&2
        # Attempt to find Dropbox directory
        local potential_path="/mnt/c/Users/${windows_user}/Dropbox (MIT)"
        if [[ -d "$potential_path" ]]; then

            dropbox_path="$potential_path/"
            log_info "Found Dropbox at $dropbox_path" >&2

        else

            log_error "Error: Unable to locate Dropbox directory." >&2
            return 1

        fi

    fi

    # Export variables
    export WINDOWS_USER="$windows_user"
    export DROPBOX_PATH="$dropbox_path"

    log_info "Dropbox path setup complete..."
fi

# Enable programmable completion
setup_completion

# Change to home directory
cd ~

# Additional environment-specific settings
if [ -x /usr/bin/lesspipe ]; then
  eval "$(SHELL=/bin/sh lesspipe)"
fi

# Set up chroot
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
  debian_chroot=$(cat /etc/debian_chroot)
fi

# Alert alias for long running commands
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Source additional local configurations if they exist
if [ -f ~/.bash_aliases ]; then
  . ~/.bash_aliases
fi

if [ -f ~/.bash_local ]; then
  . ~/.bash_local
fi

# Load custom completions
if [ -d ~/.bash_completion.d ]; then
  for file in ~/.bash_completion.d/*; do
    [ -f "$file" ] && . "$file"
  done
fi

# Display initialization message
log_info "Shell initialization complete"
log_info "Use 'vim_all <search_dir>' to open all files recursively"
log_info "Use 'count_string <search_string>' to find files with search_string"

# Optional: Set custom prompt string if not using setup_prompt
# PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
#__conda_setup="$('/home/lius/miniforge3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
#if [ $? -eq 0 ]; then
#  eval "$__conda_setup"
#else
#  if [ -f "/home/lius/miniforge3/etc/profile.d/conda.sh" ]; then
#    . "/home/lius/miniforge3/etc/profile.d/conda.sh"
#  else
#    export PATH="/home/lius/miniforge3/bin:$PATH"
#  fi
#fi
#unset __conda_setup
# <<< conda initialize <<<

